#!/bin/sh

#
# Produce defines for multiple git repos using autorevision.
#
# Note: If no repos are specified, use standard autorevision macro names
#       and the current git repo.
#

REPO_INFO=/tmp/repo.info$$
OUTPUT=
TYPE=sh
CSTART=""
CEND=""
PREFIX="VCS_"

trap "rm -rf ${REPO_INFO}; exit 0" 0 1 2 3 4 9 15

usage()
{
    echo
    echo "   Usage: $(basename $0) [OPTIONS] REPO ..."
    echo
    echo "        Where OPTIONS are:"
    echo
    echo "               [-h | --help]                 - Pring this message"
    echo "               [-b BASEDIR | --base=BASEDIR] - The root of the repos"
    echo "               [ -o FILE | --output=FILE]    - The output file"
    echo "               [ -t TYPE | --type=TYPE ]     - The output language syntax type"
    echo
    echo "          Repos are relative to BASEDIR"
    echo "          If BASEDIR and REPO ... aren't defined the current repo is used."
    echo "          Output to stdout unless output file specified"
    echo "          Type defaults to '${TYPE}'"
    echo
    exit 0
}


ARGS=$(getopt -o "b:o:t:h" -l "base:,output:,type:,help" -n "rpm-gitrepos" -- "$@");

#Bad arguments
if [ $? -ne 0 ];
then
  exit 1
fi

eval set -- "$ARGS";

while true; do
  case "$1" in
    -h|--help) usage ;;

    -b|--base) shift; BASEDIR=$1; shift ;;

    -o|--output) shift; OUTPUT=$1; shift ;;

    -t|--type) shift; TYPE=$1; shift ;;

    --) shift; break ;;

    *) usage ;;
  esac
done

# Figure out the comment charaters
case "$TYPE" in

   sh|py|pl|php|javaprop|rpm) CSTART="#"; CEND="" ;;

   h|hpp|xcode|java) CSTART="/*"; CEND="*/" ;;

   sql|lua) CSTART="--"; CEND="" ;;
   
   ini) CSTART=";"; CEND="" ;;

   js) CSTART="/**"; CEND="*/" ;;

   matlab|octave|tex) CSTART="%"; CEND="" ;;

   scheme|clojure) CSTART=";;"; CEND="" ;;
esac

# Some prefixes need to be changed

case $TYPE in
    tex|sql) PREFIX="vcs" ;;
    rpm)     PREFIX="vcs_" ;;
esac


REPOS=$*

if [ $# -eq 0 ]
then
    autorevision -t $TYPE > $REPO_INFO
else
    echo "${CSTART} Generated by autorevision - do not hand-hack!$CEND" >> $REPO_INFO
    echo  >> $REPO_INFO
    
    for repo in $REPOS
    do
	cd $BASEDIR/$repo
	autorevision -t $TYPE 2> /dev/null | \
	    sed -e "s/${PREFIX}/$(echo $repo)_${PREFIX}/" \
	        -e '/Generated by autorevision/d' \
		-e '/^$/d' \
	        -e "/$CSTART end/d" >> $REPO_INFO
	echo >> $REPO_INFO
	cd $OLDPWD
    done

    echo "$CSTART end$CEND" >> $REPO_INFO
fi

if [ "$OUTPUT" ]
then
    mv $REPO_INFO $OUTPUT
else
    cat $REPO_INFO
fi

